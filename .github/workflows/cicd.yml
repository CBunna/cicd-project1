name: CICD / Pipline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Check app starts
        run: |
          npm start &
          sleep 5
          curl http://localhost:3000/health
          pkill node

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write # Changed from 'read' to 'write' to update manifests
      packages: write
    steps:
      - name: Check Out the code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # NEW STEP: Update Kubernetes manifest
      - name: Update Kubernetes manifest
        run: |
          # Create the new image tag with commit SHA
          NEW_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${{ github.sha }}"
          echo "üè∑Ô∏è  Updating deployment to use: $NEW_IMAGE"

          # Update the deployment file (adjust path as needed)
          sed -i "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:.*|image: $NEW_IMAGE|g" k8s/deployment.yml

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Commit and push changes
          git add k8s/deployment.yml
          git commit -m "üöÄ Update deployment image to main-${{ github.sha }}"
          git push

      - name: Print image details
        run: |
          echo "üê≥ Docker image built and pushed successfully!"
          echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "üè∑Ô∏è  Tags: ${{ steps.meta.outputs.tags }}"
          echo "üìù Kubernetes manifest updated with SHA: main-${{ github.sha }}"
          echo "‚úÖ ArgoCD should now detect and sync the changes!"
